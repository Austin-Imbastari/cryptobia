{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { get } from 'lodash';\n\nvar web3 = function web3(state) {\n  return get(state, 'web3.connection');\n};\n\nexport var web3Selector = createSelector(web3, function (w) {\n  return w;\n});\n\nvar network = function network(state) {\n  return get(state, 'web3.network');\n};\n\nexport var networkSelector = createSelector(network, function (n) {\n  return n;\n});\n\nvar account = function account(state) {\n  return get(state, 'web3.account');\n};\n\nexport var accountSelector = createSelector(account, function (a) {\n  return a;\n});\n\nvar balance = function balance(state) {\n  return get(state, 'web3.balance', 0);\n};\n\nexport var balanceSelector = createSelector(balance, function (e) {\n  return e;\n});\n\nvar contract = function contract(state) {\n  return get(state, 'contract.contract');\n};\n\nexport var contractSelector = createSelector(contract, function (c) {\n  return c;\n});\n\nvar metadata = function metadata(state) {\n  return get(state, 'contract.metadata');\n};\n\nexport var metadataSelector = createSelector(metadata, function (m) {\n  return m;\n});\n\nvar nftState = function nftState(state) {\n  return get(state, 'contract.state');\n};\n\nexport var nftStateSelector = createSelector(nftState, function (s) {\n  return s;\n});","map":{"version":3,"sources":["/Users/yungimba/Desktop/dev/cryptobia/src/store/selectors.js"],"names":["createSelector","get","web3","state","web3Selector","w","network","networkSelector","n","account","accountSelector","a","balance","balanceSelector","e","contract","contractSelector","c","metadata","metadataSelector","m","nftState","nftStateSelector","s"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,GAAT,QAAoB,QAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,iBAAR,CAAP;AAAA,CAAlB;;AACA,OAAO,IAAMC,YAAY,GAAGJ,cAAc,CAACE,IAAD,EAAO,UAAAG,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAR,CAAnC;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAH,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,cAAR,CAAP;AAAA,CAArB;;AACA,OAAO,IAAMI,eAAe,GAAGP,cAAc,CAACM,OAAD,EAAU,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAX,CAAtC;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAN,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,cAAR,CAAP;AAAA,CAArB;;AACA,OAAO,IAAMO,eAAe,GAAGV,cAAc,CAACS,OAAD,EAAU,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAX,CAAtC;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAT,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,cAAR,EAAwB,CAAxB,CAAP;AAAA,CAArB;;AACA,OAAO,IAAMU,eAAe,GAAGb,cAAc,CAACY,OAAD,EAAU,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAX,CAAtC;;AAEP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAZ,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,mBAAR,CAAP;AAAA,CAAtB;;AACA,OAAO,IAAMa,gBAAgB,GAAGhB,cAAc,CAACe,QAAD,EAAW,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAZ,CAAvC;;AAEP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAf,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,mBAAR,CAAP;AAAA,CAAtB;;AACA,OAAO,IAAMgB,gBAAgB,GAAGnB,cAAc,CAACkB,QAAD,EAAW,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAZ,CAAvC;;AAEP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAlB,KAAK;AAAA,SAAIF,GAAG,CAACE,KAAD,EAAQ,gBAAR,CAAP;AAAA,CAAtB;;AACA,OAAO,IAAMmB,gBAAgB,GAAGtB,cAAc,CAACqB,QAAD,EAAW,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAZ,CAAvC","sourcesContent":["import { createSelector } from 'reselect'\r\nimport { get } from 'lodash'\r\n\r\nconst web3 = state => get(state, 'web3.connection')\r\nexport const web3Selector = createSelector(web3, w => w)\r\n\r\nconst network = state => get(state, 'web3.network')\r\nexport const networkSelector = createSelector(network, n => n)\r\n\r\nconst account = state => get(state, 'web3.account')\r\nexport const accountSelector = createSelector(account, a => a)\r\n\r\nconst balance = state => get(state, 'web3.balance', 0)\r\nexport const balanceSelector = createSelector(balance, e => e)\r\n\r\nconst contract = state => get(state, 'contract.contract')\r\nexport const contractSelector = createSelector(contract, c => c)\r\n\r\nconst metadata = state => get(state, 'contract.metadata')\r\nexport const metadataSelector = createSelector(metadata, m => m)\r\n\r\nconst nftState = state => get(state, 'contract.state')\r\nexport const nftStateSelector = createSelector(nftState, s => s)"]},"metadata":{},"sourceType":"module"}